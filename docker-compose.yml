version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: lms_nginx
    restart: unless-stopped
    ports:
    - "80:80"
    - "443:443"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app
    depends_on:
      - php

  php:
    build:
      context: ./.docker/php
    container_name: lms_php
    restart: unless-stopped
    environment:
#      - XDEBUG_CONFIG=remote_host=192.168.1.1
      PHP_IDE_CONFIG: "serverName=Docker"
    volumes:
      - ./:/var/www
      - ./.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    #command: "php artisan serve --host=0.0.0.0 --port=8000"
    ports:
      - "8000:8000"
    networks:
      - app

  mysql:
    image: mysql:5.7.38
    platform: linux/amd64
    container_name: lms_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - ./.docker/mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app

  adminer:
    image: adminer:latest
    container_name: lms_adminer
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - "8080:8080"
    networks:
      - app
    depends_on:
      - mysql

#  redis:
#    image: redis:6-alpine
#    container_name: lms_redis
#    restart: unless-stopped
#    volumes:
#      - ./.docker/redis-data:/data
#    networks:
#      - app

#  postgres:
#    image: postgres:13-alpine
#    container_name: lms_postgres
#    restart: unless-stopped
#    environment:
#      - POSTGRES_DB=${DB_DATABASE}
#      - POSTGRES_USER=${DB_USERNAME}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#    volumes:
#      - ./.docker/postgres-data:/var/lib/postgresql/data
#    networks:
#      - app
#    ports:
#      - "5432:5432"

networks:
  app:
    driver: bridge
